/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package Controllers;

import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.util.List;
import models.CourseDAO;
import models.Courses;
import models.PreRegistration;
import models.PreRegistrationDAO;
import models.StudentDAO;
import models.Students;
import models.TypeCourse;

/**
 *
 * @author Dwight
 */
public class ApproveController extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        PreRegistrationDAO dao = new PreRegistrationDAO();
        CourseDAO courseDAO = new CourseDAO();

        String keyword = request.getParameter("keyword");
        String courseName = request.getParameter("course");
        String status = request.getParameter("status");

        List<PreRegistration> list;

        // N·∫øu c√≥ filter th√¨ l·ªçc theo ƒëi·ªÅu ki·ªán, kh√¥ng th√¨ l·∫•y to√†n b·ªô
        if ((keyword != null && !keyword.trim().isEmpty())
                || (courseName != null && !courseName.trim().isEmpty())
                || (status != null && !status.trim().isEmpty())) {

            list = dao.filterPreRegistrations(keyword, courseName, status);
        } else {
            list = dao.getAllPreRegistrations();
        }

        List<Courses> courses = courseDAO.getCourses();

        request.setAttribute("list", list);
        request.setAttribute("courses", courses);
        request.setAttribute("keyword", keyword);
        request.setAttribute("selectedCourse", courseName);
        request.setAttribute("selectedStatus", status);

        request.getRequestDispatcher("confirmCourse.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String action = request.getParameter("action");
        int id = Integer.parseInt(request.getParameter("id"));
        PreRegistrationDAO dao = new PreRegistrationDAO();

        if ("accept".equals(action)) {
    // C·∫≠p nh·∫≠t tr·∫°ng th√°i th√†nh "ƒê√£ duy·ªát"
    dao.updateStatus(id, "ƒê√£ duy·ªát");

    // L·∫•y d·ªØ li·ªáu t·ª´ PreRegistrations
    PreRegistration pre = dao.getPreRegistrationById(id);

    // T·∫°o Student m·ªõi
    Students student = new Students();
    student.setName(pre.getFull_name());
    student.setEmail(pre.getEmail());
    student.setPhone(pre.getPhone());
    student.setBirthdate(pre.getBirth_date());
    student.setGender(pre.getGender());
    student.setAddress(pre.getAddress());
    student.setPassword(pre.getPhone());
    student.setRole("1"); // 1 = h·ªçc sinh

    // Insert v√†o b·∫£ng Student n·∫øu email ch∆∞a t·ªìn t·∫°i
    StudentDAO studentDAO = new StudentDAO();
    if (!studentDAO.existsByEmail(pre.getEmail())) {
        boolean inserted = studentDAO.insert(student);
        if (inserted) {
            request.getSession().setAttribute("message", "‚úîÔ∏è Duy·ªát th√†nh c√¥ng v√† ƒë√£ t·∫°o t√†i kho·∫£n h·ªçc sinh.");
        } else {
            request.getSession().setAttribute("message", "‚ùå Duy·ªát th√†nh c√¥ng nh∆∞ng l·ªói khi t·∫°o t√†i kho·∫£n.");
        }
    } else {
        request.getSession().setAttribute("message", "‚ö†Ô∏è Email n√†y ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng. Kh√¥ng th·ªÉ t·∫°o l·∫°i.");
    }

} else if ("reject".equals(action)) {
    String reason = request.getParameter("reason");
    dao.updateStatus(id, "Ch∆∞a x·∫øp ƒë∆∞·ª£c l·ªõp");
    request.getSession().setAttribute("message", "üìå H·ªçc vi√™n ƒë√£ ƒë∆∞·ª£c chuy·ªÉn v·ªÅ tr·∫°ng th√°i 'Ch∆∞a x·∫øp ƒë∆∞·ª£c l·ªõp'");
}

        
        response.sendRedirect("Approve");

        String note = request.getParameter("note");

        dao.updateNote(id, note);

        response.setContentType("text/plain");
        response.getWriter().write("success");
    }
}
